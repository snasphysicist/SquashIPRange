/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package squashiprange;

import static squashiprange.SquashIPRange.appendToIPv4rangeArray;

/**
 *
 * @author snasphysicist
 */
public class SquashIPRangeUI extends javax.swing.JFrame {

    public static String[] splitStringRanges( String ranges ) {
        
        int i ;
        String[] delimiters = new String[]{"\\|",";"," ","\t","\n","\r"} ;
        String[] separatedRanges ;
        
        for( i=0 ; i<delimiters.length ; i++ ) {
            ranges = ranges.replace( delimiters[i] , "," ) ;
        }
        
        separatedRanges = ranges.split( "," ) ;
        
        return separatedRanges ;
    }
    
    public static IPv4range[] parseStringRanges( String[] ranges ) {
        
        Integer i,j ;
        boolean parsedRange ;
        IPv4range intmRange ;
        String[] sectors ;
        IPv4address splitTool = new IPv4address(0L) ;
        int sector3min , sector3max ;
        IPv4range[] allRanges = new IPv4range[0] ;
        
        //Taking the string ranges
        //and converting them to IPv4ranges
        //In a robust, error handled way
        for( i=0 ; i<ranges.length ; i++ ) {
            //System.out.println( new Integer(j).toString() );
            try {
                parsedRange = false ;
                intmRange = new IPv4range() ;
                ranges[i] = ranges[i].replaceAll("\\*", "0-255") ;
                sectors = splitTool.splitBySector( ranges[i] ) ;
                if ( sectors[3].contains( "/" ) ) {
                    parsedRange = intmRange.parseAddSlashNotation( ranges[i] ) ;
                } else if ( sectors[2].contains( "-" ) ) {
                    sector3min = new Integer( sectors[2].split( "-" )[0] ) ;
                    sector3max = new Integer( sectors[2].split( "-" )[1] ) ;
                    parsedRange = true ;
                    for(j=sector3min;j<=sector3max;j++) {
                        parsedRange = parsedRange && intmRange.parseAddDashNotation( sectors[0] + "." + sectors[1] + "." + j.toString() + "." + sectors[3] ) ;
                    }
                } else {
                    parsedRange = intmRange.parseAddDashNotation( ranges[i] ) ;
                }
                if( parsedRange ) {
                    allRanges = appendToIPv4rangeArray( allRanges , intmRange ) ;
                }
            } 
            catch ( Exception e ) {
                System.out.println( "Failed to parse range" ) ;
                //e.printStackTrace() ;
            }
        }
        
        return allRanges ;
        
    }
    
    /**
     * Creates new form SquashIPRangeUI
     */
    public SquashIPRangeUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(600, 508));
        setPreferredSize(new java.awt.Dimension(600, 508));
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Squash IP Ranges v 1.0"));

        jLabel1.setText("Input IP Ranges:");

        jButton1.setText("Find Overlap");
        jButton1.setMaximumSize(new java.awt.Dimension(130, 27));
        jButton1.setMinimumSize(new java.awt.Dimension(130, 27));
        jButton1.setPreferredSize(new java.awt.Dimension(130, 27));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Squash");
        jButton2.setMaximumSize(new java.awt.Dimension(130, 27));
        jButton2.setMinimumSize(new java.awt.Dimension(130, 27));
        jButton2.setPreferredSize(new java.awt.Dimension(130, 27));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Clear Input");
        jButton3.setMaximumSize(new java.awt.Dimension(130, 27));
        jButton3.setMinimumSize(new java.awt.Dimension(130, 27));
        jButton3.setPreferredSize(new java.awt.Dimension(130, 27));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel2.setText("Output:");
        jLabel2.setToolTipText("");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 154, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton4.setText("Close");
        jButton4.setMaximumSize(new java.awt.Dimension(130, 27));
        jButton4.setMinimumSize(new java.awt.Dimension(130, 27));
        jButton4.setPreferredSize(new java.awt.Dimension(130, 27));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("About");
        jButton5.setMaximumSize(new java.awt.Dimension(130, 27));
        jButton5.setMinimumSize(new java.awt.Dimension(130, 27));
        jButton5.setPreferredSize(new java.awt.Dimension(130, 27));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Find Overlap button
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        int i , j ;
        String outputText = "" ;
        IPv4range[] inputRanges = parseStringRanges( splitStringRanges( jTextArea1.getText() ) ) ;
        IPv4range overlappingAddresses ;
        
        for( i=0 ; i<inputRanges.length ; i++ ) {
            for( j=i+1 ; j<inputRanges.length ; j++ ) {
                overlappingAddresses = inputRanges[i].findOverlap( inputRanges[j] ) ;
                if( overlappingAddresses.getSizeOfRange() > 0 ) {
                    outputText += "Overlap between " 
                                + inputRanges[i].convertRangeHumanReadable( inputRanges[i] )
                                + " and " 
                                + inputRanges[j].convertRangeHumanReadable( inputRanges[j] )
                                + " : "
                                + overlappingAddresses.convertRangeHumanReadable( overlappingAddresses )
                                + "\n" ;
                }
            }
        }
        
        jTextArea2.setText( outputText ) ;
        
    }//GEN-LAST:event_jButton1ActionPerformed

    //Close button
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        System.exit(0) ;
    }//GEN-LAST:event_jButton4ActionPerformed
    
    //Clear Input button
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jTextArea1.setText( "" ) ;
    }//GEN-LAST:event_jButton3ActionPerformed

    //Squash button
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        int i , j ;
        String outputText = "" ;
        IPv4range[] inputRanges = parseStringRanges( splitStringRanges( jTextArea1.getText() ) ) ;
        IPv4range concatenatedRange = new IPv4range() ;
        IPv4range[] ipRangesOut ;
        
        //Combine all input ranges into one range
        for( i=0 ; i<inputRanges.length ; i++ ) {
            concatenatedRange.concatenateWithRange( inputRanges[i] , true );
        }
        
        //Sort this range
        concatenatedRange.sortRange() ;
        
        //Split into contiguous subranges
        ipRangesOut = concatenatedRange.getContiguousSubranges() ;
        
        //Check for & concatenate adjacent ranges
        for( i=0 ; i<ipRangesOut.length ; i++ ) {
            for( j=i+1 ; j<ipRangesOut.length ; j++ ) {
                if( ipRangesOut[i].isAdjacentRange( ipRangesOut[j] ) == 1 ) {
                    ipRangesOut[i].concatenateWithRange( ipRangesOut[j] , false );
                } else if ( ipRangesOut[i].isAdjacentRange( ipRangesOut[j] ) == -1 ) {
                    ipRangesOut[i].concatenateWithRange( ipRangesOut[j] , true );
                }
            }
        }
        
        //Remove overlapping IP addresses from ranges
        for( i=0 ; i<ipRangesOut.length ; i++ ) {
            for( j=i+1 ; j<ipRangesOut.length ; j++ ) {
                if( ipRangesOut[i].getSizeOfRange() >= ipRangesOut[j].getSizeOfRange() ) {
                    ipRangesOut[j].subtractRange( ipRangesOut[i] ) ;
                } else {
                    ipRangesOut[i].subtractRange( ipRangesOut[j] ) ;                
                }
            }
        }
        
        //Remove any ranges which have been emptied by the above operation
        i = 0 ;
        while( i<ipRangesOut.length ) {
            if( ipRangesOut[i].getSizeOfRange() == 0 ) {
                ipRangesOut = ipRangesOut[0].popFromIPv4rangeArray( ipRangesOut , i ) ;
                i-- ;
            }
            i++ ;
        }
        
        //Get the resulting ranges in human readable format
        //and write them to a string to output
        for( i=0 ; i<ipRangesOut.length ; i++ ) {
            outputText += ipRangesOut[i].convertRangeHumanReadable( ipRangesOut[i] ) + "\n" ;
        }
        
        //Write this to the lower area
        jTextArea2.setText( outputText ) ;

// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
    
    //About button
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        new AboutSquashIPRange( this , false ).setVisible(true) ;
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SquashIPRangeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SquashIPRangeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SquashIPRangeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SquashIPRangeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SquashIPRangeUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
